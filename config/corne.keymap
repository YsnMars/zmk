/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        escape {
            bindings = <&kp ESC>;
            key-positions = <19 20>;
        };

        backspace {
            bindings = <&kp BACKSPACE>;
            key-positions = <32 33>;
        };

        caps_lock {
            bindings = <&kp CAPSLOCK>;
            key-positions = <13 22>;
        };

        equal_plus {
            bindings = <&kp EQUAL>;
            key-positions = <16 19>;
        };

        minus {
            bindings = <&kp MINUS>;
            key-positions = <4 7>;
        };

        underscore {
            bindings = <&kp UNDER>;
            key-positions = <28 31>;
        };

        plus {
            bindings = <&kp PLUS>;
            key-positions = <17 18>;
        };
    };

    behaviors {
        hmr: hmr {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <220>;
            quick-tap-ms = <150>;
            flavor = "balanced";
            hold-trigger-on-release;
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38 39 40 41>;
        };

        hml: hml {
            compatible = "zmk,behavior-hold-tap";
            label = "HML";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <220>;
            flavor = "balanced";
            hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 39 40 41 36 37 38>;
            hold-trigger-on-release;
            quick-tap-ms = <150>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB         &kp Q            &kp W            &kp E              &kp R                &kp T        &kp Y      &kp U                 &kp I               &kp O             &kp P                     &trans
&kp LEFT_SHIFT  &hml LEFT_GUI A  &hml LEFT_ALT S  &hml LEFT_SHIFT D  &hml LEFT_CONTROL F  &kp G        &kp H      &hmr RIGHT_CONTROL J  &hmr RIGHT_SHIFT K  &hmr RIGHT_ALT L  &hmr RIGHT_GUI SEMICOLON  &kp SQT
&kp LEFT_GUI    &kp Z            &kp X            &kp C              &kp V                &kp B        &kp N      &kp M                 &kp COMMA           &kp DOT           &kp FSLH                  &trans
                                                  &kp LEFT_ALT       &kp LEFT_CONTROL     &kp ENTER    &kp SPACE  &mo 1                 &mo 2
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB         &kp EXCL      &kp AT        &kp HASH      &kp DLLR          &kp PRCNT    &kp CARET  &kp AMPS        &kp KP_MULTIPLY  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &trans
&kp LEFT_SHIFT  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4      &kp N5       &kp MINUS  &kp LPAR        &kp RPAR         &kp RBKT          &kp BSLH           &kp GRAVE
&kp LEFT_GUI    &kp NUMBER_6  &kp N7        &kp N8        &kp N9            &kp N0       &kp UNDER  &kp LEFT_BRACE  &kp RIGHT_BRACE  &kp RBRC          &kp PIPE           &kp TILDE
                                            &kp LEFT_ALT  &kp LEFT_CONTROL  &kp ENTER    &kp SPACE  &trans          &trans
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB         &kp N1        &kp N2        &kp N3        &kp N4            &kp N5          &kp N6     &kp N7    &kp N8  &kp N9     &kp N0  &kp BSPC
&kp LEFT_SHIFT  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3      &bt BT_SEL 4    &kp LEFT   &kp DOWN  &kp UP  &kp RIGHT  &trans  &trans
&kp LEFT_GUI    &bt BT_CLR    &trans        &trans        &trans            &trans          &trans     &trans    &trans  &trans     &trans  &trans
                                            &kp LEFT_ALT  &kp LEFT_CONTROL  &kp ENTER       &kp SPACE  &trans    &trans
            >;
        };
    };
};
